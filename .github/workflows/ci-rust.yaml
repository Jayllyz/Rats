---
name: CI Rust

on:
  push:
    branches: [ main ]
    paths:
    - api/**
    - rust-toolchain.toml
  pull_request:
    paths:
    - api/**
    - rust-toolchain.toml

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.sha }}
  cancel-in-progress: ${{ github.ref_name != 'main' }}

defaults:
  run:
    working-directory: ./api

env:
  CI: true
  CARGO_TERM_COLOR: always
  RUST_LOG: info
  RUST_BACKTRACE: 1
  RUSTFLAGS: "-Dwarnings -C debuginfo=0"
  DATABASE_URL: postgresql://postgres:postgres@localhost:5432/postgres

jobs:
  code-quality:
    name: Code Quality
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        persist-credentials: false
        sparse-checkout: api

    - name: Install Rust toolchain
      uses: moonrepo/setup-rust@v1
      with:
        components: clippy,rustfmt
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Check formatting
      run: cargo fmt --all --check

    - name: Run Clippy
      run: cargo clippy --all-targets --all-features

  test:
    name: Test
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:17-alpine
        env:
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
        ports:
        - 5432:5432
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        persist-credentials: false
        sparse-checkout: api

    - name: Install Rust toolchain
      uses: moonrepo/setup-rust@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Check
      run: cargo check

    - uses: baptiste0928/cargo-install@v3
      with:
        crate: diesel_cli
        features: postgres
        args: "--no-default-features"

    - name: Setup database
      run: |
        diesel setup
        diesel migration run

    - name: Run tests
      run: cargo test
